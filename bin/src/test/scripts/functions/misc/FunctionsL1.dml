#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------
sum = function(matrix[double] X) return (double total)
{
    total = 0
    for (i in 1:nrow(X))
    {
        for (j in 1:ncol(X))
        {
            total = total + as.scalar(X[i,j])
        }
    }
    print("Override sum is " + total)
}

min = function(matrix[double] X) return (double minimum)
{
    MinRow = rowMins(X)
    MinCol = colMins(MinRow)
    minimum = as.scalar(MinCol[1,1])
    print("Minimum is " + minimum)
}

minMax = function(matrix[double] M) return (double minVal, double maxVal)
{
    # Access local overrides (defined before or after) instead of built-ins
    minVal = min(M)
    maxVal = max(M)
}

max = function(matrix[double] X) return (double maximum)
{
    MaxRow = rowMaxs(X)
    MaxCol = colMaxs(MaxRow)
    maximum = as.scalar(MaxCol[1,1])
    print("Maximum is " + maximum)
}
