#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------
def sum(X: matrix[float]) -> (total: float):
    total = 0
    for (i in 0:nrow(X)-1):
        for (j in 0:ncol(X)-1):
            total = total + scalar(X[i,j])
    print("Override sum is " + total)

def min(X: matrix[float]) -> (minimum: float):
    MinRow = rowMins(X)
    MinCol = colMins(MinRow)
    minimum = scalar(MinCol[0,0])
    print("Minimum is " + minimum)

def minMax(M: matrix[float]) -> (minVal: float, maxVal: float):
    # Access local overrides (defined before or after) instead of built-ins
    minVal = min(M)
    maxVal = max(M)

def max(X: matrix[float]) -> (maximum: float):
    MaxRow = rowMaxs(X)
    MaxCol = colMaxs(MaxRow)
    maximum = scalar(MaxCol[0,0])
    print("Maximum is " + maximum)
